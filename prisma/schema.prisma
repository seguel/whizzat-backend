// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model usuario {
  id                     Int                      @id @default(autoincrement())
  primeiro_nome          String
  ultimo_nome            String
  email                  String                   @unique
  senha                  String
  id_perfil              Int?
  ativo                  Boolean                  @default(false)
  createdAt              DateTime                 @default(now())

  //usuario_perfil_empresa usuario_perfil_empresa[]
  avaliador   usuario_perfil_avaliador []
  recrutador  usuario_perfil_recrutador[]
}

model perfil {
  id                     Int                      @id @default(autoincrement())
  perfil                 String
  descricao              String
  ativo                  Boolean                  @default(true)

  //usuario_perfil_empresa usuario_perfil_empresa[]
  avaliador   usuario_perfil_avaliador []
  recrutador  usuario_perfil_recrutador[]
}

model usuario_perfil_recrutador {
  id                Int     @id @default(autoincrement())
  usuario_id        Int
  perfil_id         Int
  telefone          String
  localizacao       String
  apresentacao      String
  logo              String
  meio_notificacao  String
  data_cadastro     DateTime  @default(now())
  ativo             Boolean   @default(true)

  usuario    usuario @relation(fields: [usuario_id], references: [id])
  perfil     perfil  @relation(fields: [perfil_id], references: [id])
  empresas   empresa[]

  @@unique([usuario_id, perfil_id])
}

model usuario_perfil_avaliador {
  id                Int       @id @default(autoincrement())
  usuario_id        Int
  perfil_id         Int
  empresa_id        Int?
  telefone          String
  localizacao       String
  apresentacao      String
  logo              String
  avaliar_todos     Boolean   @default(false)
  meio_notificacao  String
  data_cadastro     DateTime  @default(now())
  ativo             Boolean   @default(true)
  status_cadastro   Int   @default(-1)
  data_envio_link   DateTime  @default(now())

  // Relações
  usuario          usuario               @relation(fields: [usuario_id], references: [id])
  perfil           perfil                @relation(fields: [perfil_id], references: [id])
  empresa          empresa? @relation(fields: [empresa_id], references: [id])
  skills           avaliador_skill[]

  // Garante que um mesmo usuário não tenha duplicidade de perfil
  @@unique([usuario_id, perfil_id])
}

model avaliador_skill {
  id             Int                      @id @default(autoincrement())
  avaliador_id   Int
  skill_id       Int
  peso           Int
  favorito       Boolean
  tempo_favorito String

  // Relações
  avaliador      usuario_perfil_avaliador @relation(fields: [avaliador_id], references: [id])
  skill          skill                    @relation(fields: [skill_id], references: [skill_id])
}

model empresa {
  id             Int      @id @default(autoincrement())
  recrutador_id  Int
  nome_empresa   String
  website        String
  email          String
  telefone       String
  localizacao    String
  apresentacao   String
  logo           String
  imagem_fundo   String
  data_cadastro  DateTime  @default(now())
  ativo          Boolean  @default(true)

  recrutador     usuario_perfil_recrutador @relation(fields: [recrutador_id], references: [id])
  vagas          empresa_vaga[]            @relation("EmpresaVagas") // ✅ lado inverso nomeado
  avaliadores    usuario_perfil_avaliador[]
}

model empresa_vaga {
  vaga_id                  Int                     @id @default(autoincrement())
  empresa_id               Int
  nome_vaga                String
  descricao                String
  local_vaga               String
  modalidade_trabalho_id   Int
  periodo_trabalho_id      Int
  pcd                      Boolean
  qtde_dias_aberta         Int
  qtde_posicao             Int
  data_cadastro            DateTime  @default(now())
  ativo                    Boolean   @default(true)

  // Relações
  modalidade_trabalho      modalidade_trabalho     @relation(fields: [modalidade_trabalho_id], references: [modalidade_trabalho_id])
  periodo_trabalho         periodo_trabalho        @relation(fields: [periodo_trabalho_id], references: [periodo_trabalho_id])
  skills                   empresa_vaga_skill[]

  empresa                  empresa  @relation(name: "EmpresaVagas", fields: [empresa_id], references: [id]) // <- lado "um"
}


model empresa_vaga_skill {
  id                Int          @id @default(autoincrement())
  vaga_id           Int
  skill_id          Int
  peso              Int
  avaliador_proprio Boolean

  // Relações
  vaga              empresa_vaga @relation(fields: [vaga_id], references: [vaga_id])
  skill             skill        @relation(fields: [skill_id], references: [skill_id])
}


model skill {
  skill_id   Int                   @id @default(autoincrement())
  skill    String  @unique
  ativo    Boolean @default(true)

  // Relações
  vagas      empresa_vaga_skill[]
  avaliadores avaliador_skill[]
}


model modalidade_trabalho {
  modalidade_trabalho_id Int              @id @default(autoincrement())
  modalidade             String
  ativo                  Boolean

  // Relações
  vagas                  empresa_vaga[]
}


model periodo_trabalho {
  periodo_trabalho_id Int              @id @default(autoincrement())
  periodo             String
  ativo               Boolean

  // Relações
  vagas               empresa_vaga[]
}

//model usuario_perfil_empresa {
//  empresa_id    Int       @id @default(autoincrement()) // <- empresa_id é @id
//  usuario_id    Int
//  perfil_id     Int
//  nome_empresa  String
//  website       String
//  email         String
//  telefone      String
//  localizacao   String
//  apresentacao  String
//  logo          String
//  imagem_fundo  String
//  ativo         Boolean   @default(true)
//
//  // Relações
//  usuario       usuario   @relation(fields: [usuario_id], references: [id])
//  perfil        perfil    @relation(fields: [perfil_id], references: [id])
//  vagas         empresa_vaga[] @relation(name: "EmpresaVagas") // <- lado "muitos"
//  avaliadores    usuario_perfil_avaliador[]   // <- relação inversa
//}
