// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model usuario {
  id                     Int                      @id @default(autoincrement())
  primeiro_nome          String
  ultimo_nome            String
  email                  String                   @unique
  senha                  String
  id_perfil              Int?
  ativo                  Boolean                  @default(false)
  createdAt              DateTime                 @default(now())
  usuario_perfil_empresa usuario_perfil_empresa[]
}

model perfil {
  id                     Int                      @id @default(autoincrement())
  perfil                 String
  descricao              String
  ativo                  Boolean                  @default(true)
  usuario_perfil_empresa usuario_perfil_empresa[]
}

model usuario_perfil_empresa {
  empresa_id    Int       @id @default(autoincrement()) // <- empresa_id é @id
  usuario_id    Int
  perfil_id     Int
  nome_empresa  String
  website       String
  email         String
  telefone      String
  localizacao   String
  apresentacao  String
  logo          String
  imagem_fundo  String
  ativo         Boolean   @default(true)

  // Relações
  usuario       usuario   @relation(fields: [usuario_id], references: [id])
  perfil        perfil    @relation(fields: [perfil_id], references: [id])
  vagas         empresa_vaga[] @relation(name: "EmpresaVagas") // <- lado "muitos"
}

model empresa_vaga {
  vaga_id                  Int                     @id @default(autoincrement())
  empresa_id               Int
  nome_vaga                String
  descricao                String
  local_vaga               String
  modalidade_trabalho_id   Int
  periodo_trabalho_id      Int
  pcd                      Boolean
  qtde_dias_aberta         Int
  qtde_posicao             Int
  data_cadastro            DateTime  @default(now())

  // Relações
  modalidade_trabalho      modalidade_trabalho     @relation(fields: [modalidade_trabalho_id], references: [modalidade_trabalho_id])
  periodo_trabalho         periodo_trabalho        @relation(fields: [periodo_trabalho_id], references: [periodo_trabalho_id])
  skills                   empresa_vaga_skill[]

  empresa                  usuario_perfil_empresa  @relation(name: "EmpresaVagas", fields: [empresa_id], references: [empresa_id]) // <- lado "um"
}


model empresa_vaga_skill {
  id                Int          @id @default(autoincrement())
  vaga_id           Int
  skill_id          Int
  peso              Int
  avaliador_proprio Boolean

  // Relações
  vaga              empresa_vaga @relation(fields: [vaga_id], references: [vaga_id])
  skill             skill        @relation(fields: [skill_id], references: [skill_id])
}


model skill {
  skill_id   Int                   @id @default(autoincrement())
  skill    String  @unique
  ativo    Boolean @default(true)

  // Relações
  vagas      empresa_vaga_skill[]
}


model modalidade_trabalho {
  modalidade_trabalho_id Int              @id @default(autoincrement())
  modalidade             String
  ativo                  Boolean

  // Relações
  vagas                  empresa_vaga[]
}


model periodo_trabalho {
  periodo_trabalho_id Int              @id @default(autoincrement())
  periodo             String
  ativo               Boolean

  // Relações
  vagas               empresa_vaga[]
}
